import{Entity as t,Table as e}from"dynamodb-toolbox";import{DynamoDBDocumentClient as r}from"@aws-sdk/lib-dynamodb";import{z as n}from"zod";import i from"ms";import{randomBytes as s}from"crypto";var o={name:"Session",attributes:{id:{type:"string",default:function(){return s(16).toString("hex")}},pk:{partitionKey:!0,type:"string",default:function(t){return"session#"+t.id}},sk:{sortKey:!0,type:"string",default:function(t){return"session#"+t.id}},gsi1pk:{type:"string",dependsOn:"userId",default:function(t){return"user#"+t.userId}},gsi1sk:{type:"string",dependsOn:"id",default:function(t){return t.pk}},userId:{type:"number",required:!0},username:{type:"string",required:!0},name:{type:"string",required:!0},avatarUrl:{type:"string"},githubUrl:{type:"string",required:!0},roles:{type:"list"},ttl:{type:"number",required:!0}}},u=n.object({id:n.string(),pk:n.string(),sk:n.string(),userId:n.number(),username:n.string(),name:n.string(),avatarUrl:n.string().optional(),githubUrl:n.string(),roles:n.preprocess(function(t){return t||[]},n.string().array()),ttl:n.number(),modified:n.string(),created:n.string(),entity:n.string()}),a=n.object({id:n.string(),redirectUri:n.string().optional()}),d={name:"OAuthStateCode",attributes:{id:{type:"string",default:function(){return s(16).toString("hex")}},pk:{partitionKey:!0,type:"string",default:function(t){return"oauth_state_code#"+t.id}},sk:{sortKey:!0,type:"string",default:function(t){return"oauth_state_code#"+t.id}},redirectUri:{type:"string"},code:{type:"string",dependsOn:["id","redirectUri"],default:function(t){return JSON.stringify(a.parse(t))}},ttl:{type:"number",default:function(){return Math.round(((new Date).getTime()+i("15m"))/1e3)}}}},p=n.object({id:n.string(),pk:n.string(),sk:n.string(),redirectUri:n.string().optional(),code:n.string(),ttl:n.number(),modified:n.string(),created:n.string(),entity:n.string()}),g={name:"OAuthMock",attributes:{id:{type:"string",required:!0},pk:{partitionKey:!0,type:"string",default:function(t){return"oauth_mock#"+t.id}},sk:{sortKey:!0,type:"string",default:function(t){return"oauth_mock#"+t.id}},userId:{type:"number",required:!0},ttl:{type:"number",default:function(){return Math.round(((new Date).getTime()+i("15m"))/1e3)}}}},m=n.object({id:n.string(),pk:n.string(),sk:n.string(),userId:n.number(),ttl:n.number(),modified:n.string(),created:n.string(),entity:n.string()}),l={marshallOptions:{convertEmptyValues:!1,removeUndefinedValues:!1,convertClassInstanceToMap:!1},unmarshallOptions:{wrapNumbers:!1}},c=function(n){this.table=void 0,this.entities={oauthStateCode:new t(d),session:new t(o),oauthMock:new t(g)},this.table=new e({name:n.tableName,partitionKey:"pk",sortKey:"sk",indexes:{gsi1:{partitionKey:"gsi1pk",sortKey:"gsi1sk"}},DocumentClient:r.from(n.client,l)});for(var i=0,s=Object.values(this.entities);i<s.length;i++)s[i].table=this.table};export{c as Ddb,g as OAuthMockSchema,d as OAuthStateCodeSchema,o as SessionSchema,a as ZCode,m as ZOAuthMock,p as ZOAuthStateCode,u as ZSession};
//# sourceMappingURL=index.module.js.map
