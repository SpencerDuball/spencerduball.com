import{Entity as t,Table as e}from"dynamodb-toolbox";import{DynamoDBDocumentClient as r}from"@aws-sdk/lib-dynamodb";import{z as i}from"zod";import s from"ms";import{randomBytes as n}from"crypto";const o={name:"Session",attributes:{id:{type:"string",default:()=>n(16).toString("hex")},pk:{partitionKey:!0,type:"string",default:t=>`session#${t.id}`},sk:{sortKey:!0,type:"string",default:t=>`session#${t.id}`},gsi1pk:{type:"string",dependsOn:"userId",default:t=>`user#${t.userId}`},gsi1sk:{type:"string",dependsOn:"id",default:t=>t.pk},userId:{type:"number",required:!0},username:{type:"string",required:!0},name:{type:"string",required:!0},avatarUrl:{type:"string"},githubUrl:{type:"string",required:!0},roles:{type:"list"},ttl:{type:"number",required:!0}}},a=i.object({id:i.string(),pk:i.string(),sk:i.string(),userId:i.number(),username:i.string(),name:i.string(),avatarUrl:i.string().optional(),githubUrl:i.string(),roles:i.preprocess(t=>t||[],i.string().array()),ttl:i.number(),modified:i.string(),created:i.string(),entity:i.string()}),d=i.object({id:i.string(),redirectUri:i.string().optional()}),u={name:"OAuthStateCode",attributes:{id:{type:"string",default:()=>n(16).toString("hex")},pk:{partitionKey:!0,type:"string",default:t=>`oauth_state_code#${t.id}`},sk:{sortKey:!0,type:"string",default:t=>`oauth_state_code#${t.id}`},redirectUri:{type:"string"},code:{type:"string",dependsOn:["id","redirectUri"],default:t=>JSON.stringify(d.parse(t))},ttl:{type:"number",default:()=>Math.round(((new Date).getTime()+s("15m"))/1e3)}}},p=i.object({id:i.string(),pk:i.string(),sk:i.string(),redirectUri:i.string().optional(),code:i.string(),ttl:i.number(),modified:i.string(),created:i.string(),entity:i.string()}),g={name:"OAuthMock",attributes:{id:{type:"string",required:!0},pk:{partitionKey:!0,type:"string",default:t=>`oauth_mock#${t.id}`},sk:{sortKey:!0,type:"string",default:t=>`oauth_mock#${t.id}`},userId:{type:"number",required:!0},ttl:{type:"number",default:()=>Math.round(((new Date).getTime()+s("15m"))/1e3)}}},l=i.object({id:i.string(),pk:i.string(),sk:i.string(),userId:i.number(),ttl:i.number(),modified:i.string(),created:i.string(),entity:i.string()}),m={marshallOptions:{convertEmptyValues:!1,removeUndefinedValues:!1,convertClassInstanceToMap:!1},unmarshallOptions:{wrapNumbers:!1}};class y{constructor(i){this.table=void 0,this.entities={oauthStateCode:new t(u),session:new t(o),oauthMock:new t(g)},this.table=new e({name:i.tableName,partitionKey:"pk",sortKey:"sk",indexes:{gsi1:{partitionKey:"gsi1pk",sortKey:"gsi1sk"}},DocumentClient:r.from(i.client,m)});for(let t of Object.values(this.entities))t.table=this.table}}export{y as Ddb,g as OAuthMockSchema,u as OAuthStateCodeSchema,o as SessionSchema,d as ZCode,l as ZOAuthMock,p as ZOAuthStateCode,a as ZSession};
//# sourceMappingURL=index.modern.js.map
